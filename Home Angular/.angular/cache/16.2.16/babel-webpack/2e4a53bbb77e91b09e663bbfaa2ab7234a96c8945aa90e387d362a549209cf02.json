{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { LoginModule } from './login/login.module';\nimport { AuthGuard } from './service/auth.guard';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nconst routes = [{\n  path: 'login',\n  loadChildren: () => LoginModule // Load LoginModule lazily\n}, {\n  path: '',\n  redirectTo: 'login',\n  pathMatch: 'full' // Default route to login\n}, {\n  path: 'sidebar',\n  loadChildren: () => import('./components/components.module').then(m => m.ComponentsModule),\n  canActivate: [AuthGuard] // Lazy load components\n}, {\n  path: '**',\n  redirectTo: 'login' // Catch-all wildcard, redirect to login\n}];\n\nclass AppRoutingModule {\n  static {\n    this.ɵfac = function AppRoutingModule_Factory(t) {\n      return new (t || AppRoutingModule)();\n    };\n  }\n  static {\n    this.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n      type: AppRoutingModule\n    });\n  }\n  static {\n    this.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n      imports: [RouterModule.forRoot(routes), RouterModule]\n    });\n  }\n}\nexport { AppRoutingModule };\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && i0.ɵɵsetNgModuleScope(AppRoutingModule, {\n    imports: [i1.RouterModule],\n    exports: [RouterModule]\n  });\n})();","map":{"version":3,"names":["RouterModule","LoginModule","AuthGuard","routes","path","loadChildren","redirectTo","pathMatch","then","m","ComponentsModule","canActivate","AppRoutingModule","forRoot","imports","i1","exports"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\app-routing.module.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { LoginModule } from './login/login.module';\nimport { AuthGuard } from './service/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    loadChildren: () => LoginModule // Load LoginModule lazily\n  },\n  {\n    path: '', redirectTo: 'login', pathMatch: 'full' // Default route to login\n  },\n  {\n    path: 'sidebar', loadChildren: () => import('./components/components.module').then(m => m.ComponentsModule),\n    canActivate: [AuthGuard]  // Lazy load components\n  },\n  {\n    path: '**', redirectTo: 'login' // Catch-all wildcard, redirect to login\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n"],"mappings":"AACA,SAASA,YAAY,QAAgB,iBAAiB;AACtD,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,SAAS,QAAQ,sBAAsB;;;AAEhD,MAAMC,MAAM,GAAW,CACrB;EACEC,IAAI,EAAE,OAAO;EACbC,YAAY,EAAEA,CAAA,KAAMJ,WAAW,CAAC;CACjC,EACD;EACEG,IAAI,EAAE,EAAE;EAAEE,UAAU,EAAE,OAAO;EAAEC,SAAS,EAAE,MAAM,CAAC;CAClD,EACD;EACEH,IAAI,EAAE,SAAS;EAAEC,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,gCAAgC,CAAC,CAACG,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,gBAAgB,CAAC;EAC3GC,WAAW,EAAE,CAACT,SAAS,CAAC,CAAE;CAC3B,EACD;EACEE,IAAI,EAAE,IAAI;EAAEE,UAAU,EAAE,OAAO,CAAC;CACjC,CACF;;AAED,MAIaM,gBAAgB;;;uBAAhBA,gBAAgB;IAAA;EAAA;;;YAAhBA;IAAgB;EAAA;;;gBAHjBZ,YAAY,CAACa,OAAO,CAACV,MAAM,CAAC,EAC5BH,YAAY;IAAA;EAAA;;SAEXY,gBAAgB;;2EAAhBA,gBAAgB;IAAAE,OAAA,GAAAC,EAAA,CAAAf,YAAA;IAAAgB,OAAA,GAFjBhB,YAAY;EAAA;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}