{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"ngx-socket-io\";\nclass WebSocketService {\n  constructor(socket) {\n    this.socket = socket;\n    this.newNotification$ = this.socket.fromEvent('newNotification'); // Existing listener\n  }\n  // Listen for custom events\n  listenForNewIncidents() {\n    return this.socket.fromEvent('newIncident'); // Adjust the type if needed\n  }\n  // Emit custom events if needed\n  emitEvent(eventName, payload) {\n    this.socket.emit(eventName, payload);\n  }\n  static {\n    this.ɵfac = function WebSocketService_Factory(t) {\n      return new (t || WebSocketService)(i0.ɵɵinject(i1.Socket));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: WebSocketService,\n      factory: WebSocketService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { WebSocketService };","map":{"version":3,"names":["WebSocketService","constructor","socket","newNotification$","fromEvent","listenForNewIncidents","emitEvent","eventName","payload","emit","i0","ɵɵinject","i1","Socket","factory","ɵfac","providedIn"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\service\\websocket.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Socket } from 'ngx-socket-io';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class WebSocketService {\r\n  newNotification$ = this.socket.fromEvent<string>('newNotification'); // Existing listener\r\n\r\n  constructor(private socket: Socket) {}\r\n\r\n  // Listen for custom events\r\n  listenForNewIncidents() {\r\n    return this.socket.fromEvent<any>('newIncident'); // Adjust the type if needed\r\n  }\r\n\r\n  // Emit custom events if needed\r\n  emitEvent(eventName: string, payload: any): void {\r\n    this.socket.emit(eventName, payload);\r\n  }\r\n}\r\n"],"mappings":";;AAGA,MAGaA,gBAAgB;EAG3BC,YAAoBC,MAAc;IAAd,KAAAA,MAAM,GAANA,MAAM;IAF1B,KAAAC,gBAAgB,GAAG,IAAI,CAACD,MAAM,CAACE,SAAS,CAAS,iBAAiB,CAAC,CAAC,CAAC;EAEhC;EAErC;EACAC,qBAAqBA,CAAA;IACnB,OAAO,IAAI,CAACH,MAAM,CAACE,SAAS,CAAM,aAAa,CAAC,CAAC,CAAC;EACpD;EAEA;EACAE,SAASA,CAACC,SAAiB,EAAEC,OAAY;IACvC,IAAI,CAACN,MAAM,CAACO,IAAI,CAACF,SAAS,EAAEC,OAAO,CAAC;EACtC;;;uBAbWR,gBAAgB,EAAAU,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAAhBb,gBAAgB;MAAAc,OAAA,EAAhBd,gBAAgB,CAAAe,IAAA;MAAAC,UAAA,EAFf;IAAM;EAAA;;SAEPhB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}