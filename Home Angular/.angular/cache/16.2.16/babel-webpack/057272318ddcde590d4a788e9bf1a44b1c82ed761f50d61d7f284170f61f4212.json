{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getIncedeentData() {\n    return this.http.get(`${environment.url}/getIncidents`);\n  }\n  registerNewuser(userData) {\n    return this.http.post(`${environment.url}/register`, userData, {\n      headers: {\n        enctype: 'multipart/form-data'\n      }\n    });\n  }\n  getuserData() {\n    return this.http.get(`${environment.url}/getUser`);\n  }\n  addCameraType(cameraData) {\n    console.log('cameraData', cameraData);\n    return this.http.post(`${environment.url}/addCamera`, {\n      cameraData\n    });\n  }\n  static {\n    this.ɵfac = function ServiceService_Factory(t) {\n      return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ServiceService,\n      factory: ServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ServiceService };","map":{"version":3,"names":["environment","ServiceService","constructor","http","getIncedeentData","get","url","registerNewuser","userData","post","headers","enctype","getuserData","addCameraType","cameraData","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\service\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHandler, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceService {\n  constructor(private http: HttpClient) {}\n\n  getIncedeentData() {\n    return this.http.get(`${environment.url}/getIncidents`);\n  }\n  registerNewuser(userData: FormData) {\n    return this.http.post(`${environment.url}/register`, userData, {\n      headers: { enctype: 'multipart/form-data' },\n    });\n  }\n\n  getuserData() {\n    return this.http.get(`${environment.url}/getUser`);\n  }\n  addCameraType(cameraData: any) {\n    console.log('cameraData', cameraData);\n\n    return this.http.post(`${environment.url}/addCamera`, { cameraData });\n  }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;;;AACzD,MAGaC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAGL,WAAW,CAACM,GAAG,eAAe,CAAC;EACzD;EACAC,eAAeA,CAACC,QAAkB;IAChC,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGT,WAAW,CAACM,GAAG,WAAW,EAAEE,QAAQ,EAAE;MAC7DE,OAAO,EAAE;QAAEC,OAAO,EAAE;MAAqB;KAC1C,CAAC;EACJ;EAEAC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAAC,GAAGL,WAAW,CAACM,GAAG,UAAU,CAAC;EACpD;EACAO,aAAaA,CAACC,UAAe;IAC3BC,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEF,UAAU,CAAC;IAErC,OAAO,IAAI,CAACX,IAAI,CAACM,IAAI,CAAC,GAAGT,WAAW,CAACM,GAAG,YAAY,EAAE;MAAEQ;IAAU,CAAE,CAAC;EACvE;;;uBAnBWb,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdnB,cAAc;MAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;SAEPtB,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}