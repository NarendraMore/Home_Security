{"ast":null,"code":"import { environment } from 'src/environment/environment';\nimport * as axios from 'axios';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ServiceService {\n  constructor(http) {\n    this.http = http;\n  }\n  getIncedeentData() {\n    return this.http.get(`${environment.url}/getIncidents`);\n  }\n  registerNewuser(userData) {\n    return this.http.post(`${environment.url}/register`, {\n      userData\n    });\n  }\n  getuserData() {\n    return this.http.get(`${environment.url}/getUser`);\n  }\n  addCameraType(cameraData) {\n    return axios.post(`${environment.url}/addCamera`, {\n      cameratype: 'face_cam',\n      usb: cameraData.usb || 0,\n      url: cameraData.url || '' // Set url value if present\n    }, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => {\n      console.log('Response camera', response);\n      return response.data; // Return the response data if you want to use it later\n    }).catch(error => {\n      console.error(error);\n      throw error; // Re-throw error to handle it at the component level\n    });\n  }\n\n  static {\n    this.ɵfac = function ServiceService_Factory(t) {\n      return new (t || ServiceService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ServiceService,\n      factory: ServiceService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { ServiceService };","map":{"version":3,"names":["environment","axios","ServiceService","constructor","http","getIncedeentData","get","url","registerNewuser","userData","post","getuserData","addCameraType","cameraData","cameratype","usb","headers","then","response","console","log","data","catch","error","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\service\\service.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHandler, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environment/environment';\nimport * as axios from 'axios';\n@Injectable({\n  providedIn: 'root',\n})\nexport class ServiceService {\n  constructor(private http: HttpClient) {}\n\n  getIncedeentData() {\n    return this.http.get(`${environment.url}/getIncidents`);\n  }\n  registerNewuser(userData: any) {\n    return this.http.post(`${environment.url}/register`, { userData });\n  }\n  getuserData() {\n    return this.http.get(`${environment.url}/getUser`);\n  }\n  addCameraType(cameraData: any) {\n    return axios\n      .post(\n        `${environment.url}/addCamera`,\n        {\n          cameratype: 'face_cam',\n          usb: cameraData.usb || 0, // Set usb value based on the form data\n          url: cameraData.url || '', // Set url value if present\n        },\n        {\n          headers: {\n            'Content-Type': 'application/json',\n          },\n        }\n      )\n      .then((response: { data: any; }) => {\n        console.log('Response camera', response);\n        return response.data; // Return the response data if you want to use it later\n      })\n      .catch((error: any) => {\n        console.error(error);\n        throw error; // Re-throw error to handle it at the component level\n      });\n  }\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,6BAA6B;AACzD,OAAO,KAAKC,KAAK,MAAM,OAAO;;;AAC9B,MAGaC,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAEvCC,gBAAgBA,CAAA;IACd,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,GAAGN,WAAW,CAACO,GAAG,eAAe,CAAC;EACzD;EACAC,eAAeA,CAACC,QAAa;IAC3B,OAAO,IAAI,CAACL,IAAI,CAACM,IAAI,CAAC,GAAGV,WAAW,CAACO,GAAG,WAAW,EAAE;MAAEE;IAAQ,CAAE,CAAC;EACpE;EACAE,WAAWA,CAAA;IACT,OAAO,IAAI,CAACP,IAAI,CAACE,GAAG,CAAC,GAAGN,WAAW,CAACO,GAAG,UAAU,CAAC;EACpD;EACAK,aAAaA,CAACC,UAAe;IAC3B,OAAOZ,KAAK,CACTS,IAAI,CACH,GAAGV,WAAW,CAACO,GAAG,YAAY,EAC9B;MACEO,UAAU,EAAE,UAAU;MACtBC,GAAG,EAAEF,UAAU,CAACE,GAAG,IAAI,CAAC;MACxBR,GAAG,EAAEM,UAAU,CAACN,GAAG,IAAI,EAAE,CAAE;KAC5B,EACD;MACES,OAAO,EAAE;QACP,cAAc,EAAE;;KAEnB,CACF,CACAC,IAAI,CAAEC,QAAwB,IAAI;MACjCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEF,QAAQ,CAAC;MACxC,OAAOA,QAAQ,CAACG,IAAI,CAAC,CAAC;IACxB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAU,IAAI;MACpBJ,OAAO,CAACI,KAAK,CAACA,KAAK,CAAC;MACpB,MAAMA,KAAK,CAAC,CAAC;IACf,CAAC,CAAC;EACN;;;;uBAnCWrB,cAAc,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdzB,cAAc;MAAA0B,OAAA,EAAd1B,cAAc,CAAA2B,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA;;SAEP5B,cAAc","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}