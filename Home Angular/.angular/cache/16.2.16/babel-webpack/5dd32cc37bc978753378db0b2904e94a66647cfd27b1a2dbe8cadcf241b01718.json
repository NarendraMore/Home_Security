{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet SidebarComponent = class SidebarComponent {\n  constructor(router, service, authService, webSocketService) {\n    this.router = router;\n    this.service = service;\n    this.authService = authService;\n    this.webSocketService = webSocketService;\n    this.incidentDataArray = [];\n    this.searchText = '';\n    this.p = 1;\n    this.isNotificationOpen = false;\n    this.notifications = ['Camera disconnected', 'Motion detected', 'Low battery'];\n    this.notificationCount = this.notifications.length;\n    this.showNotificationPreview = false;\n    this.selectedNotification = null;\n    this.selectedNotificationIndex = null;\n    this.incidents = [];\n  }\n  ngOnInit() {\n    this.webSocketService.newIncident$.subscribe(incident => {\n      console.log('New incident received:', incident);\n      this.incidents.unshift(incident); // Add new incident to the list\n    });\n  }\n\n  onclickLogout() {\n    this.authService.logout();\n    // Redirect the user to the login page\n    this.router.navigate(['/login']);\n  }\n  displayUser() {\n    this.router.navigate(['/sidebar/user']);\n  }\n  dispalyCameraAdd() {\n    this.router.navigate(['/sidebar/camera']);\n  }\n  displayDashbord() {\n    this.router.navigate(['/sidebar/dashboard']);\n  }\n  toggleNotification() {\n    this.isNotificationOpen = !this.isNotificationOpen;\n  }\n  showPreview(notification, index) {\n    this.selectedNotification = notification;\n    this.selectedNotificationIndex = index;\n    this.showNotificationPreview = true;\n  }\n  closePreview() {\n    if (this.selectedNotificationIndex !== null) {\n      // Remove the selected notification\n      this.notifications.splice(this.selectedNotificationIndex, 1);\n      this.notificationCount = this.notifications.length;\n      // Reset selected notification and preview\n      this.selectedNotification = null;\n      this.selectedNotificationIndex = null;\n      this.showNotificationPreview = false;\n    }\n  }\n};\nSidebarComponent = __decorate([Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})], SidebarComponent);\nexport { SidebarComponent };","map":{"version":3,"names":["Component","SidebarComponent","constructor","router","service","authService","webSocketService","incidentDataArray","searchText","p","isNotificationOpen","notifications","notificationCount","length","showNotificationPreview","selectedNotification","selectedNotificationIndex","incidents","ngOnInit","newIncident$","subscribe","incident","console","log","unshift","onclickLogout","logout","navigate","displayUser","dispalyCameraAdd","displayDashbord","toggleNotification","showPreview","notification","index","closePreview","splice","__decorate","selector","templateUrl","styleUrls"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\components\\sidebar\\sidebar.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from 'src/app/service/auth.service';\nimport { ServiceService } from 'src/app/service/service.service';\nimport { WebSocketService } from 'src/app/service/websocket.service';\nimport { environment } from 'src/environment/environment';\n\nexport interface inciedentdata {\n  incident_type: string;\n  time: string;\n  date: string;\n  _id: string;\n}\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css'],\n})\nexport class SidebarComponent {\n  incidentDataArray: inciedentdata[] = [];\n  searchText: string = '';\n  p: number = 1;\n  isNotificationOpen = false;\n  notifications: string[] = ['Camera disconnected', 'Motion detected', 'Low battery'];\n  notificationCount = this.notifications.length;\n  showNotificationPreview = false;\n  selectedNotification: string | null = null;\n  selectedNotificationIndex: number | null = null;\n  incidents: any[] = [];\n  constructor(\n    private router: Router,\n    private service: ServiceService,\n    private authService: AuthService,\n    private webSocketService: WebSocketService\n  ) {}\n  ngOnInit() {\n    this.webSocketService.newIncident$.subscribe((incident: any) => {\n      console.log('New incident received:', incident);\n      this.incidents.unshift(incident); // Add new incident to the list\n    });\n  }\n  onclickLogout() {\n    this.authService.logout();\n\n    // Redirect the user to the login page\n    this.router.navigate(['/login']);\n  }\n\n  displayUser() {\n    this.router.navigate(['/sidebar/user']);\n  }\n  dispalyCameraAdd() {\n    this.router.navigate(['/sidebar/camera']);\n  }\n  displayDashbord() {\n    this.router.navigate(['/sidebar/dashboard']);\n  }\n  toggleNotification() {\n    this.isNotificationOpen = !this.isNotificationOpen;\n  }\n\n\n  showPreview(notification: string, index: number) {\n    this.selectedNotification = notification;\n    this.selectedNotificationIndex = index;\n    this.showNotificationPreview = true;\n  }\n\n  closePreview() {\n    if (this.selectedNotificationIndex !== null) {\n      // Remove the selected notification\n      this.notifications.splice(this.selectedNotificationIndex, 1);\n      this.notificationCount = this.notifications.length;\n\n      // Reset selected notification and preview\n      this.selectedNotification = null;\n      this.selectedNotificationIndex = null;\n      this.showNotificationPreview = false;\n    }\n  }\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,eAAe;AAmBzC,IAAaC,gBAAgB,GAA7B,MAAaA,gBAAgB;EAW3BC,YACUC,MAAc,EACdC,OAAuB,EACvBC,WAAwB,EACxBC,gBAAkC;IAHlC,KAAAH,MAAM,GAANA,MAAM;IACN,KAAAC,OAAO,GAAPA,OAAO;IACP,KAAAC,WAAW,GAAXA,WAAW;IACX,KAAAC,gBAAgB,GAAhBA,gBAAgB;IAd1B,KAAAC,iBAAiB,GAAoB,EAAE;IACvC,KAAAC,UAAU,GAAW,EAAE;IACvB,KAAAC,CAAC,GAAW,CAAC;IACb,KAAAC,kBAAkB,GAAG,KAAK;IAC1B,KAAAC,aAAa,GAAa,CAAC,qBAAqB,EAAE,iBAAiB,EAAE,aAAa,CAAC;IACnF,KAAAC,iBAAiB,GAAG,IAAI,CAACD,aAAa,CAACE,MAAM;IAC7C,KAAAC,uBAAuB,GAAG,KAAK;IAC/B,KAAAC,oBAAoB,GAAkB,IAAI;IAC1C,KAAAC,yBAAyB,GAAkB,IAAI;IAC/C,KAAAC,SAAS,GAAU,EAAE;EAMlB;EACHC,QAAQA,CAAA;IACN,IAAI,CAACZ,gBAAgB,CAACa,YAAY,CAACC,SAAS,CAAEC,QAAa,IAAI;MAC7DC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEF,QAAQ,CAAC;MAC/C,IAAI,CAACJ,SAAS,CAACO,OAAO,CAACH,QAAQ,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC;EACJ;;EACAI,aAAaA,CAAA;IACX,IAAI,CAACpB,WAAW,CAACqB,MAAM,EAAE;IAEzB;IACA,IAAI,CAACvB,MAAM,CAACwB,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;EAClC;EAEAC,WAAWA,CAAA;IACT,IAAI,CAACzB,MAAM,CAACwB,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;EACzC;EACAE,gBAAgBA,CAAA;IACd,IAAI,CAAC1B,MAAM,CAACwB,QAAQ,CAAC,CAAC,iBAAiB,CAAC,CAAC;EAC3C;EACAG,eAAeA,CAAA;IACb,IAAI,CAAC3B,MAAM,CAACwB,QAAQ,CAAC,CAAC,oBAAoB,CAAC,CAAC;EAC9C;EACAI,kBAAkBA,CAAA;IAChB,IAAI,CAACrB,kBAAkB,GAAG,CAAC,IAAI,CAACA,kBAAkB;EACpD;EAGAsB,WAAWA,CAACC,YAAoB,EAAEC,KAAa;IAC7C,IAAI,CAACnB,oBAAoB,GAAGkB,YAAY;IACxC,IAAI,CAACjB,yBAAyB,GAAGkB,KAAK;IACtC,IAAI,CAACpB,uBAAuB,GAAG,IAAI;EACrC;EAEAqB,YAAYA,CAAA;IACV,IAAI,IAAI,CAACnB,yBAAyB,KAAK,IAAI,EAAE;MAC3C;MACA,IAAI,CAACL,aAAa,CAACyB,MAAM,CAAC,IAAI,CAACpB,yBAAyB,EAAE,CAAC,CAAC;MAC5D,IAAI,CAACJ,iBAAiB,GAAG,IAAI,CAACD,aAAa,CAACE,MAAM;MAElD;MACA,IAAI,CAACE,oBAAoB,GAAG,IAAI;MAChC,IAAI,CAACC,yBAAyB,GAAG,IAAI;MACrC,IAAI,CAACF,uBAAuB,GAAG,KAAK;;EAExC;CAED;AA/DYb,gBAAgB,GAAAoC,UAAA,EAL5BrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,aAAa;EACvBC,WAAW,EAAE,0BAA0B;EACvCC,SAAS,EAAE,CAAC,yBAAyB;CACtC,CAAC,C,EACWvC,gBAAgB,CA+D5B;SA/DYA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}