{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass InterceptorInterceptor {\n  constructor() {}\n  intercept(req, next) {\n    const Token = localStorage.getItem('auth_token');\n    console.log('Token', Token);\n    const clonedRequest = req.clone({\n      headers: req.headers.set('Authorization', '')\n    });\n    return next.handle(req);\n  }\n  static {\n    this.ɵfac = function InterceptorInterceptor_Factory(t) {\n      return new (t || InterceptorInterceptor)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: InterceptorInterceptor,\n      factory: InterceptorInterceptor.ɵfac\n    });\n  }\n}\nexport { InterceptorInterceptor };","map":{"version":3,"names":["InterceptorInterceptor","constructor","intercept","req","next","Token","localStorage","getItem","console","log","clonedRequest","clone","headers","set","handle","factory","ɵfac"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\interceptor.interceptor.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class InterceptorInterceptor implements HttpInterceptor {\n\n  constructor() {}\n   \n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<unknown>> {\n    const Token = localStorage.getItem('auth_token')\n    console.log('Token',Token);\n    \n    const clonedRequest = req.clone({\n      headers: req.headers.set('Authorization','')\n    })\n    return next.handle(req);\n  }\n}\n"],"mappings":";AASA,MACaA,sBAAsB;EAEjCC,YAAA,GAAe;EAEfC,SAASA,CAACC,GAAqB,EAAEC,IAAiB;IAChD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IAChDC,OAAO,CAACC,GAAG,CAAC,OAAO,EAACJ,KAAK,CAAC;IAE1B,MAAMK,aAAa,GAAGP,GAAG,CAACQ,KAAK,CAAC;MAC9BC,OAAO,EAAET,GAAG,CAACS,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,EAAE;KAC5C,CAAC;IACF,OAAOT,IAAI,CAACU,MAAM,CAACX,GAAG,CAAC;EACzB;;;uBAZWH,sBAAsB;IAAA;EAAA;;;aAAtBA,sBAAsB;MAAAe,OAAA,EAAtBf,sBAAsB,CAAAgB;IAAA;EAAA;;SAAtBhB,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}