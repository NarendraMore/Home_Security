{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate(next, state) {\n    if (this.authService.isAuthenticated()) {\n      // You can also check the user role here if needed\n      return true;\n    } else {\n      this.router.navigate(['/login']); // Redirect to login if not authenticated\n      return false;\n    }\n  }\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","next","state","isAuthenticated","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\service\\auth.guard.ts"],"sourcesContent":["// auth.guard.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(next: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    if (this.authService.isAuthenticated()) {\r\n      // You can also check the user role here if needed\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']); // Redirect to login if not authenticated\r\n      return false;\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAKA,MAGaA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAACC,IAA4B,EAAEC,KAA0B;IAClE,IAAI,IAAI,CAACJ,WAAW,CAACK,eAAe,EAAE,EAAE;MACtC;MACA,OAAO,IAAI;KACZ,MAAM;MACL,IAAI,CAACJ,MAAM,CAACK,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;MAClC,OAAO,KAAK;;EAEhB;;;uBAZWR,SAAS,EAAAS,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATd,SAAS;MAAAe,OAAA,EAATf,SAAS,CAAAgB,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA;;SAEPjB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}