{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./auth.service\";\nimport * as i2 from \"@angular/router\";\nclass AuthGuard {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n  }\n  canActivate() {\n    const token = this.authService.getToken();\n    if (token) {\n      return true; // Allow navigation\n    } else {\n      this.router.navigate(['/login']);\n      return false; // Block navigation\n    }\n  }\n\n  static {\n    this.ɵfac = function AuthGuard_Factory(t) {\n      return new (t || AuthGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthGuard,\n      factory: AuthGuard.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}\nexport { AuthGuard };","map":{"version":3,"names":["AuthGuard","constructor","authService","router","canActivate","token","getToken","navigate","i0","ɵɵinject","i1","AuthService","i2","Router","factory","ɵfac","providedIn"],"sources":["D:\\Narendra\\Home-Security\\Home_angular\\src\\app\\service\\auth.guard.ts"],"sourcesContent":["// auth.guard.ts\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  canActivate(): boolean {\r\n    const token = this.authService.getToken();\r\n    if (token) {\r\n      return true; // Allow navigation\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false; // Block navigation\r\n    }\r\n  }\r\n}\r\n"],"mappings":";;;AAKA,MAGaA,SAAS;EAEpBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;EAAW;EAEvEC,WAAWA,CAAA;IACT,MAAMC,KAAK,GAAG,IAAI,CAACH,WAAW,CAACI,QAAQ,EAAE;IACzC,IAAID,KAAK,EAAE;MACT,OAAO,IAAI,CAAC,CAAC;KACd,MAAM;MACL,IAAI,CAACF,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;MAChC,OAAO,KAAK,CAAC,CAAC;;EAElB;;;;uBAZWP,SAAS,EAAAQ,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,MAAA;IAAA;EAAA;;;aAATb,SAAS;MAAAc,OAAA,EAATd,SAAS,CAAAe,IAAA;MAAAC,UAAA,EAFR;IAAM;EAAA;;SAEPhB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}